:root {
  font-family:
    "Inter",
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    sans-serif;
  background-color: #10141f;
  color: #f8fafc;
  line-height: 1.5;
  font-weight: 400;
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100vh;
  overflow: hidden;
}

#root {
  margin: 0;
  height: 100%;
  overflow: hidden;
}

@supports (height: 100dvh) {
  html,
  body {
    height: 100dvh;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.app-shell {
  --shell-padding: clamp(1rem, 3vw, 1.5rem);
  --board-gap: clamp(0.35rem, 1.4vw, 0.65rem);
  --board-width-cap: clamp(
    16rem,
    calc(100vw - 2 * var(--shell-padding)),
    44rem
  );
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: var(--shell-padding);
  gap: 1.5rem;
  box-sizing: border-box;
  overflow: hidden;
}

.app-header,
.app-footer {
  text-align: center;
}

.app-subtitle {
  margin: 0.25rem 0 0;
  color: #94a3b8;
  font-size: 1rem;
}

.app-main {
  flex: 1;
  display: grid;
  grid-template-rows: 1fr auto;
  row-gap: clamp(1rem, 3vh, 1.75rem);
  align-items: stretch;
  min-height: 0;
  overflow: visible;
  width: 100%;
  box-sizing: border-box;
}

.game-stage {
  height: 100%;
  display: grid;
  grid-template-rows: minmax(0, 1fr) auto;
  row-gap: clamp(0.75rem, 2vh, 1.5rem);
  justify-items: center;
  align-items: center;
  min-height: 0;
  width: 100%;
  max-width: min(var(--board-width-cap), 100%);
  margin-inline: auto;
  box-sizing: border-box;
  overflow: visible;
}

@supports (container-type: size) {
  .game-stage {
    container-type: size;
  }
}

.board {
  --tile-gap: var(--board-gap);
  aspect-ratio: 5 / 6;
  width: 100%;
  max-width: var(--board-width-cap);
  height: auto;
  max-height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: var(--tile-gap);
  justify-self: center;
  align-self: center;
  box-sizing: border-box;
  overflow: visible;
  min-width: 0;
}

@supports (container-type: size) {
  .board {
    width: min(
      var(--board-width-cap),
      100cqw,
      calc(100cqh * 5 / 6)
    );
    max-width: var(--board-width-cap);
    max-height: calc(100cqh - 2px);
    align-self: start;
    justify-self: center;
  }
}

.board-row {
  display: grid;
  grid-template-columns: repeat(5, minmax(0, 1fr));
  gap: var(--tile-gap);
  perspective: 800px;
  width: 100%;
  box-sizing: border-box;
}

.tile {
  position: relative;
  width: 100%;
  aspect-ratio: 1 / 1;
  transform-style: preserve-3d;
}

.tile-face {
  position: absolute;
  inset: 0;
  display: grid;
  place-items: center;
  border-radius: clamp(0.18rem, 0.6vw, 0.3rem);
  border: clamp(1px, 0.2vw, 2px) solid #1f2937;
  font-size: clamp(1.1rem, 3.2vw, 1.8rem);
  font-weight: 600;
  text-transform: uppercase;
  background: #0f172a;
  color: #e2e8f0;
  backface-visibility: hidden;
}

.tile-front {
  transform: rotateY(0deg);
}

.tile-back {
  transform: rotateY(180deg);
}

.tile[data-status="correct"] .tile-back {
  background: #538d4e;
  border-color: #538d4e;
}

.tile[data-status="present"] .tile-back {
  background: #b59f3b;
  border-color: #b59f3b;
}

.tile[data-status="absent"] .tile-back {
  background: #475569;
  border-color: #475569;
}

.tile[data-status="empty"] .tile-back {
  background: #0f172a;
  border-color: #1f2937;
}

.tile[data-revealed="true"] {
  animation: tile-flip 0.5s linear forwards;
}

@keyframes tile-flip {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(180deg);
  }
}

.status-bar {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem;
  text-align: center;
  min-height: 3rem;
  width: 100%;
  justify-self: stretch;
  align-self: stretch;
}

.status-controls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.status-message {
  min-height: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.game-state {
  text-transform: uppercase;
  font-size: 0.875rem;
  letter-spacing: 0.08em;
  color: #e2e8f0;
}

.reset-button {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 0.5rem;
  background: #38bdf8;
  color: #0f172a;
  font-weight: 600;
  cursor: pointer;
  transition:
    transform 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.reset-button:hover {
  transform: translateY(-1px);
  box-shadow: 0 8px 16px rgba(56, 189, 248, 0.25);
}

.keyboard {
  --key-gap: clamp(0.2rem, 1vw, 0.65rem);
  --key-width: clamp(1.75rem, 6.8vw, 3.2rem);
  --key-height: clamp(2.4rem, 7vw, 3.5rem);
  --command-width: clamp(2.6rem, 9vw, 4.6rem);
  width: 100%;
  max-width: var(--board-width-cap);
  margin-inline: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: clamp(0.4rem, 1.2vw, 0.75rem);
  padding: clamp(0.45rem, 1.2vw, 0.85rem) clamp(0.5rem, 2.4vw, 1.1rem)
    calc(clamp(0.45rem, 1.2vw, 0.85rem) + env(safe-area-inset-bottom, 0));
  box-sizing: border-box;
}

.keyboard-row {
  width: 100%;
  display: flex;
  justify-content: center;
  gap: var(--key-gap);
  padding-inline: var(--row-offset, 0);
}

.keyboard-row[data-row="home"] {
  --row-offset: calc((var(--key-width) + var(--key-gap)) * 0.55);
}

.keyboard-row[data-row="bottom"] {
  --row-offset: calc((var(--key-width) * 1.4) + var(--key-gap));
}

.key {
  flex: 0 0 var(--key-width);
  width: var(--key-width);
  height: var(--key-height);
  padding: clamp(0.45rem, 1.5vw, 0.7rem) clamp(0.3rem, 0.9vw, 0.5rem);
  border-radius: 0.5rem;
  border: none;
  background: #475569;
  color: #e2e8f0;
  font-weight: 600;
  cursor: pointer;
  text-transform: uppercase;
  font-size: clamp(0.9rem, 2.4vw, 1rem);
  white-space: nowrap;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1;
  transition:
    transform 0.1s ease-in-out,
    background 0.2s;
}

.key:hover {
  transform: translateY(-1px);
  background: #334155;
}

.dialog-backdrop {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1.5rem;
  background: rgba(15, 23, 42, 0.75);
  backdrop-filter: blur(4px);
  z-index: 1000;
}

.dialog-card {
  width: min(28rem, 100%);
  padding: 2rem;
  border-radius: 0.75rem;
  background: #131f3b;
  box-shadow: 0 24px 40px rgba(15, 23, 42, 0.4);
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
  align-items: center;
  text-align: center;
}

.dialog-title {
  margin: 0;
  font-size: 1.75rem;
}

.dialog-message {
  margin: 0;
  font-size: 1.125rem;
  color: #cbd5f5;
}

.stats-summary {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(7rem, 1fr));
  gap: 0.75rem;
}

.stat-card {
  padding: 0.75rem 1rem;
  background: #1f2b4a;
  border-radius: 0.75rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.35rem;
}

.stat-value {
  font-size: 1.5rem;
  font-weight: 700;
  color: #f8fafc;
}

.stat-label {
  font-size: 0.75rem;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: #94a3b8;
}

.guess-distribution {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  text-align: left;
}

.distribution-title {
  margin: 0;
  font-size: 0.9rem;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: #94a3b8;
}

.distribution-list {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.distribution-item {
  display: grid;
  grid-template-columns: 2rem 1fr auto;
  align-items: center;
  gap: 0.75rem;
  padding: 0.25rem 0;
}

.distribution-label {
  font-weight: 600;
  color: #cbd5f5;
  text-align: center;
}

.distribution-bar {
  height: 1.75rem;
  background: #1a2542;
  border-radius: 0.5rem;
  overflow: hidden;
  position: relative;
}

.distribution-bar-fill {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, #38bdf8, #22d3ee);
  border-radius: inherit;
  transform-origin: left center;
}

.distribution-count {
  font-weight: 600;
  color: #e2e8f0;
  min-width: 3ch;
  text-align: right;
}

.dialog-actions {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.dialog-share {
  padding: 0.6rem 1.5rem;
  border: none;
  border-radius: 999px;
  background: #22d3ee;
  color: #0f172a;
  font-weight: 600;
  cursor: pointer;
  transition:
    transform 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.dialog-share:hover {
  transform: translateY(-1px);
  box-shadow: 0 12px 24px rgba(34, 211, 238, 0.35);
}

.dialog-share-error {
  margin: 0;
  font-size: 0.85rem;
  color: #f87171;
}

.dialog-close {
  padding: 0.6rem 1.5rem;
  border: none;
  border-radius: 999px;
  background: #38bdf8;
  color: #0f172a;
  font-weight: 600;
  cursor: pointer;
  transition:
    transform 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.dialog-close:hover {
  transform: translateY(-1px);
  box-shadow: 0 12px 24px rgba(56, 189, 248, 0.3);
}

.key-correct {
  background: #538d4e;
  color: #0f172a;
}

.key-present {
  background: #b59f3b;
  color: #0f172a;
}

.key-absent {
  background: #1e293b;
}

.key-command {
  flex: 0 0 var(--command-width);
  width: var(--command-width);
  height: var(--key-height);
  text-transform: none;
  font-size: clamp(0.75rem, 2vw, 0.9rem);
  color: #f8fafc;
  gap: 0.25rem;
}

.key-command-icon {
  width: clamp(1.1rem, 3vw, 1.4rem);
  height: clamp(1.1rem, 3vw, 1.4rem);
  filter: brightness(0) invert(1);
  display: block;
}

@media (max-width: 480px) {
  .app-shell {
    --board-gap: clamp(0.3rem, 2.5vw, 0.5rem);
    --board-width-cap: clamp(
      15rem,
      calc(100vw - 2 * var(--shell-padding)),
      32rem
    );
  }

  .game-stage {
    container-type: normal;
  }

  .board {
    width: 100%;
    max-width: var(--board-width-cap);
    max-height: 100%;
    align-self: center;
    justify-self: stretch;
  }
}

@media (max-height: 720px) {
  .app-shell {
    gap: 1.25rem;
    --board-gap: clamp(0.25rem, 1vw, 0.5rem);
  }

  .app-main {
    row-gap: 1.25rem;
  }

  .game-stage {
    row-gap: clamp(0.6rem, 1.5vh, 1.1rem);
  }

  .keyboard {
    --key-gap: clamp(0.3rem, 1vw, 0.6rem);
    --key-height: clamp(2.1rem, 6.5vw, 3.2rem);
    padding: clamp(0.35rem, 1vw, 0.7rem)
      clamp(0.45rem, 2vw, 0.85rem)
      calc(clamp(0.35rem, 1vw, 0.7rem) + env(safe-area-inset-bottom, 0));
  }
}
